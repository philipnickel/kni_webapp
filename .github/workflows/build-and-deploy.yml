name: Build and Deploy KNI Webapp

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: production

  deploy-production:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Deploy to Dokploy
        uses: dokploy/dokploy-action@v1
        with:
          dokploy_url: ${{ secrets.DOKPLOY_URL }}
          dokploy_token: ${{ secrets.DOKPLOY_TOKEN }}
          application_id: ${{ secrets.DOKPLOY_APP_ID }}
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy-preview:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Deploy Preview to Dokploy
        uses: dokploy/dokploy-action@v1
        with:
          dokploy_url: ${{ secrets.DOKPLOY_URL }}
          dokploy_token: ${{ secrets.DOKPLOY_TOKEN }}
          application_id: ${{ secrets.DOKPLOY_PREVIEW_APP_ID }}
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.head_ref }}-${{ github.sha }}
          environment:
            PREVIEW_ID: "pr${{ github.event.number }}"
            BASE_DOMAIN: ${{ secrets.PREVIEW_BASE_DOMAIN }}
