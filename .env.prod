# =============================================================================
# Production Environment Configuration
# For production deployment with Dokploy and optimization settings
# =============================================================================

# Docker Configuration
COMPOSE_PROJECT_NAME=kni_webapp_prod
DOCKER_TARGET=production
RESTART_POLICY=unless-stopped
ENV_FILE=.env.prod

# Disable development-only services
PROFILE_DEV=disabled

# Service Ports (production standard)
WEB_PORT=80
CONTAINER_PORT=80
DB_PORT=5432
REDIS_PORT=6379

# Docker Images (LTS versions for production)
POSTGRES_IMAGE=postgres:15-alpine
REDIS_IMAGE=redis:7-alpine

# Django Settings (production secure)
DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
DEBUG=False
DJANGO_SETTINGS_MODULE=project.settings.production

# Domain Configuration (will be set by deployment)
DOMAIN=${DOMAIN:-localhost}
ALLOWED_HOSTS=${DOMAIN},www.${DOMAIN},localhost,127.0.0.1
PRIMARY_DOMAIN=${DOMAIN}

# Database Configuration
DATABASE_URL=postgresql://${DATABASE_USER:-wagtail}:${DATABASE_PASSWORD}@db:5432/${DATABASE_NAME:-wagtail}
DATABASE_NAME=${DATABASE_NAME:-wagtail}
DATABASE_USER=${DATABASE_USER:-wagtail}
DATABASE_PASSWORD=${DATABASE_PASSWORD}
POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C

# Redis Configuration
REDIS_URL=redis://:${REDIS_PASSWORD:-}@redis:6379/0
REDIS_PASSWORD=${REDIS_PASSWORD:-}
REDIS_COMMAND=redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}

# Email Configuration (production SMTP)
EMAIL_HOST=${EMAIL_HOST:-localhost}
EMAIL_PORT=${EMAIL_PORT:-25}
EMAIL_USE_TLS=${EMAIL_USE_TLS:-False}
EMAIL_HOST_USER=${EMAIL_HOST_USER:-}
EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-}
DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL:-noreply@${DOMAIN}}
SERVER_EMAIL=${SERVER_EMAIL:-noreply@${DOMAIN}}

# File Storage Configuration
USE_S3=${USE_S3:-False}
MEDIA_ROOT=/app/media
STATIC_ROOT=/app/staticfiles

# Wagtail Settings
WAGTAILADMIN_BASE_URL=https://${DOMAIN}
WAGTAIL_SITE_NAME=${WAGTAIL_SITE_NAME:-KNI Webapp}

# SaaS Configuration
SAAS_MODE=${SAAS_MODE:-True}
ADMIN_EMAIL=${ADMIN_EMAIL:-admin@${DOMAIN}}
PREVIEW_MODE=${PREVIEW_MODE:-False}
PREVIEW_ID=${PREVIEW_ID:-}

# Performance Settings (optimized for production)
GUNICORN_WORKERS=${GUNICORN_WORKERS:-3}
GUNICORN_TIMEOUT=${GUNICORN_TIMEOUT:-30}
GUNICORN_MAX_REQUESTS=${GUNICORN_MAX_REQUESTS:-1000}

# Security Settings (production hardened)
SECURE_SSL_REDIRECT=False  # Let reverse proxy handle SSL
SESSION_COOKIE_SECURE=False  # Will be True with HTTPS
CSRF_COOKIE_SECURE=False   # Will be True with HTTPS

# Health Check Settings (production monitoring)
HEALTH_INTERVAL=30s
HEALTH_TIMEOUT=10s
HEALTH_RETRIES=3
HEALTH_START_PERIOD=2m

# Database Health (production monitoring)
DB_HEALTH_INTERVAL=10s
DB_HEALTH_TIMEOUT=5s
DB_HEALTH_RETRIES=5
DB_HEALTH_START_PERIOD=10s

# Redis Health (production monitoring)
REDIS_HEALTH_INTERVAL=10s
REDIS_HEALTH_TIMEOUT=5s
REDIS_HEALTH_RETRIES=5
REDIS_HEALTH_START_PERIOD=5s

# Optional: S3 Configuration for production file storage
# USE_S3=True
# AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
# AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
# AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
# AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME:-us-east-1}
# AWS_S3_CUSTOM_DOMAIN=${AWS_S3_CUSTOM_DOMAIN:-}

# Optional: Logging and Monitoring
# LOG_LEVEL=INFO
# SENTRY_DSN=${SENTRY_DSN:-}

# Optional: SSL and Security (handled by reverse proxy)
# SECURE_HSTS_SECONDS=31536000
# SECURE_HSTS_INCLUDE_SUBDOMAINS=True
# SECURE_HSTS_PRELOAD=True