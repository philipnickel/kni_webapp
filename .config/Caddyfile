# Caddy configuration for Django/Wagtail application
# Serves static/media files directly and proxies dynamic requests to Gunicorn

:80 {
    # Enable access logging
    log {
        output stdout
        format console
    }

    # Health check aliases - respond directly with OK (must come first!)
    handle /ready {
        respond "OK" 200
    }

    handle /ready/ {
        respond "OK" 200
    }

    # Health check endpoints - respond directly with OK instead of proxying
    handle /health/ready {
        respond "OK" 200
    }

    handle /health/ready/ {
        respond "OK" 200
    }

    # Other health endpoints - pass through to Django
    handle_path /health/* {
        reverse_proxy 127.0.0.1:8000 {
            # Health check specific headers
            header_up Host {host}
            header_up X-Real-IP {remote}
        }
    }

    # Admin interface - pass through to Django with auth
    handle_path /admin/* {
        reverse_proxy 127.0.0.1:8000 {
            header_up Host {host}
            header_up X-Real-IP {remote}
        }
    }

    # Static files - serve directly with optimized caching
    handle_path /static/* {
        root * /app/staticfiles
        file_server {
            hide .htaccess
        }

        # Cache static files for 1 year
        header Cache-Control "public, max-age=31536000, immutable"
        header X-Content-Type-Options "nosniff"

        # Compress static assets
        encode gzip zstd
    }

    # Media files - serve directly with shorter cache
    handle_path /media/* {
        root * /app
        file_server {
            hide .htaccess
        }

        # Cache media files for 1 week
        header Cache-Control "public, max-age=604800"
        header X-Content-Type-Options "nosniff"

        # Compress media files
        encode gzip zstd
    }

    # Favicon - serve directly
    handle /favicon.ico {
        root * /app/staticfiles
        file_server
        header Cache-Control "public, max-age=86400"
    }

    # Robots.txt - serve directly
    handle /robots.txt {
        root * /app/staticfiles
        file_server
        header Cache-Control "public, max-age=86400"
    }

    # All other requests - proxy to Django/Gunicorn
    handle {
        reverse_proxy 127.0.0.1:8000 {
            # Request headers (only necessary ones)
            header_up Host {host}
            header_up X-Real-IP {remote}
            header_up X-Forwarded-For {remote}
            header_up X-Forwarded-Proto {scheme}

            # Response headers for security
            header_down X-Frame-Options "DENY"
            header_down X-Content-Type-Options "nosniff"
            header_down Referrer-Policy "strict-origin-when-cross-origin"

            # Connection settings for better reliability
            transport http {
                dial_timeout 10s
                response_header_timeout 30s
            }

            # Retry configuration for startup reliability
            fail_duration 30s
            max_fails 3
            unhealthy_request_count 3

            # Health check configuration - passive monitoring only
        }

        # Enable compression for dynamic content
        encode gzip zstd
    }

    # Error handling
    handle_errors {
        # Return a generic error page for production
        respond "Service temporarily unavailable" 503
    }
}

# Optional: HTTPS redirect configuration (for production with SSL)
# Uncomment and configure when SSL certificates are available
#
# http:// {
#     redir https://{host}{uri} permanent
# }