# =============================================================================
# Development Environment Configuration
# For local development with hot reload and debugging tools
# =============================================================================

# Docker Configuration
COMPOSE_PROJECT_NAME=kni_webapp_dev
DOCKER_TARGET=development
RESTART_POLICY=unless-stopped
ENV_FILE=.env.dev
PROFILE_DEV=dev

# Service Ports (avoid conflicts with production)
WEB_PORT=8000
CONTAINER_PORT=8000
DB_PORT=5433
REDIS_PORT=6380
NODE_PORT=3000
MAILHOG_UI_PORT=8025
MAILHOG_SMTP_PORT=1025

# Docker Images
POSTGRES_IMAGE=postgres:16-alpine
REDIS_IMAGE=redis:7-alpine
MAILHOG_IMAGE=mailhog/mailhog:latest

# Django Settings
DJANGO_SECRET_KEY=dev-secret-key-not-for-production-use-only
DEBUG=True
DJANGO_SETTINGS_MODULE=project.settings.dev

# Domain Configuration
DOMAIN=localhost
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
PRIMARY_DOMAIN=localhost

# Database Configuration
DATABASE_URL=postgresql://wagtail:wagtail@db:5432/wagtail_dev
DATABASE_NAME=wagtail_dev
DATABASE_USER=wagtail
DATABASE_PASSWORD=wagtail
POSTGRES_INITDB_ARGS=

# Redis Configuration
REDIS_URL=redis://redis:6379/0
REDIS_PASSWORD=
REDIS_COMMAND=redis-server --appendonly yes

# Email Configuration (Mailhog for local testing)
EMAIL_HOST=mailhog
EMAIL_PORT=1025
EMAIL_USE_TLS=False
EMAIL_HOST_USER=
EMAIL_HOST_PASSWORD=
DEFAULT_FROM_EMAIL=dev@localhost
SERVER_EMAIL=dev@localhost

# File Storage (local for development)
USE_S3=False
MEDIA_ROOT=/app/media
STATIC_ROOT=/app/staticfiles

# Wagtail Settings
WAGTAILADMIN_BASE_URL=http://localhost:8000
WAGTAIL_SITE_NAME=KNI Webapp (Dev)

# Wagtail Transfer (update BASE_URL + SECRET_KEY per environment)
WAGTAILTRANSFER_SECRET_KEY=dev-transfer-secret
WAGTAILTRANSFER_SOURCES={"staging": {"BASE_URL": "https://staging.example.com/wagtail-transfer/", "SECRET_KEY": "dev-transfer-secret"}}
BASELINE_SOURCE=staging
BASELINE_ROOT_PAGE_ID=
BASELINE_TRANSFER_TIMEOUT=10

# Development Tools
INTERNAL_IPS=127.0.0.1,::1

# Node.js Configuration
NODE_ENV=development
NODE_COMMAND=sh -c "npm install && npm run dev"

# SaaS Configuration (disabled for development)
SAAS_MODE=False
ADMIN_EMAIL=dev@localhost
PREVIEW_MODE=False
PREVIEW_ID=

# Performance Settings (minimal for development)
GUNICORN_WORKERS=2
GUNICORN_TIMEOUT=30
GUNICORN_MAX_REQUESTS=1000

# Health Check Settings
HEALTH_INTERVAL=30s
HEALTH_TIMEOUT=10s
HEALTH_RETRIES=3
HEALTH_START_PERIOD=1m

# Database Health
DB_HEALTH_INTERVAL=10s
DB_HEALTH_TIMEOUT=5s
DB_HEALTH_RETRIES=5
DB_HEALTH_START_PERIOD=10s

# Redis Health
REDIS_HEALTH_INTERVAL=10s
REDIS_HEALTH_TIMEOUT=5s
REDIS_HEALTH_RETRIES=5
REDIS_HEALTH_START_PERIOD=5s

# Mailhog Health
MAILHOG_HEALTH_INTERVAL=10s
MAILHOG_HEALTH_TIMEOUT=5s
MAILHOG_HEALTH_RETRIES=3
MAILHOG_HEALTH_START_PERIOD=5s

# Optional: S3 Configuration (if testing S3 locally with MinIO)
# AWS_ACCESS_KEY_ID=minio
# AWS_SECRET_ACCESS_KEY=minio123
# AWS_STORAGE_BUCKET_NAME=test-bucket
# AWS_S3_ENDPOINT_URL=http://minio:9000
# AWS_S3_CUSTOM_DOMAIN=minio:9000
# AWS_S3_USE_SSL=False

# Optional: Additional Development Settings
# LOG_LEVEL=DEBUG
# CELERY_TASK_ALWAYS_EAGER=True
# CELERY_TASK_EAGER_PROPAGATES=True
